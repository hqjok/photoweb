<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.photo.web.mapper.CommentsPOMapper">
    <resultMap id="BaseResultMap" type="com.photo.web.entity.po.CommentsPO">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="belongto_id" property="belongtoId" jdbcType="INTEGER"/>
        <result column="area_id" property="areaId" jdbcType="INTEGER"/>
        <result column="parent_comment_id" property="parentCommentId" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.photo.web.entity.po.CommentsPO" extends="BaseResultMap">
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <!---->

    <resultMap id="commentVO" type="com.photo.web.entity.po.CommentsPOCustom" extends="BaseResultMap">
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
        <association property="memberPO" column="user_id"
                     javaType="com.photo.web.entity.po.MemberPO">
            <id column="id" property="id"/>
            <result column="username" property="username"/>
            <result column="headpic_path" property="headpicPath"/>
        </association>
        <collection property="commentsPOList" column="id"
                    select="getCommentChild"
                    javaType="java.util.List"
                    ofType="com.photo.web.entity.po.CommentsPOCustom">
        </collection>
    </resultMap>

    <resultMap id="commentVOWithMember" type="com.photo.web.entity.po.CommentsPOCustom" extends="BaseResultMap">
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
        <association property="memberPO" column="user_id"
                     javaType="com.photo.web.entity.po.MemberPO">
            <result column="username" property="username"/>
            <result column="headpic_path" property="headpicPath"/>
        </association>
        <association property="areaPO" column="area_id"
                     javaType="com.photo.web.entity.po.AreaPO">
            <result column="areaname" property="areaname"/>
        </association>
    </resultMap>

    <select id="countByAreaIdAndArticleId" resultType="java.lang.Integer">
        select count(*) from tb_comments
        where area_id = #{areaId} and belongto_id = #{belongtoId}
    </select>

    <select id="getCommentWithMember" resultMap="commentVOWithMember"
            parameterType="com.photo.web.entity.po.CommentsPOExample">
        select c.*, m.username, m.headpic_path, s.areaname from tb_comments c
        left join tb_member m on c.user_id = m.id
        left join tb_area s on c.area_id = s.id
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>

    <select id="getCommentList" resultMap="commentVO">
        select * from tb_comments c
         left join tb_member m on c.user_id = m.id
         where c.belongto_id=#{activityid} and c.area_id=#{type} and c.parent_comment_id is null order by c.create_time desc
    </select>
    <resultMap id="child" type="com.photo.web.entity.po.CommentsPOCustom" extends="BaseResultMap">
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
        <association property="memberPO" column="user_id"
                     javaType="com.photo.web.entity.po.MemberPO">
            <id column="id" property="id"/>
            <result column="username" property="username"/>
            <result column="headpic_path" property="headpicPath"/>
        </association>
        <collection property="commentsPOList" column="id"
                    select="getCommentChild"
                    javaType="java.util.List"
                    ofType="com.photo.web.entity.po.CommentsPOCustom"></collection>
    </resultMap>
    <select id="getCommentChild" resultMap="child">
        select * from tb_comments  c
         left join tb_member m on c.user_id = m.id
         where c.parent_comment_id=#{commentId} order by c.create_time desc
    </select>

    <!---->

    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, create_time, belongto_id, area_id, parent_comment_id, user_id
  </sql>
    <sql id="Blob_Column_List">
    content
  </sql>
    <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
            parameterType="com.photo.web.entity.po.CommentsPOExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from tb_comments
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="com.photo.web.entity.po.CommentsPOExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from tb_comments
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from tb_comments
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_comments
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="com.photo.web.entity.po.CommentsPOExample">
        delete from tb_comments
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.photo.web.entity.po.CommentsPO">
    insert into tb_comments (id, create_time, belongto_id, 
      area_id, parent_comment_id, user_id, 
      content)
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{belongtoId,jdbcType=INTEGER}, 
      #{areaId,jdbcType=INTEGER}, #{parentCommentId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.photo.web.entity.po.CommentsPO">
        insert into tb_comments
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="belongtoId != null">
                belongto_id,
            </if>
            <if test="areaId != null">
                area_id,
            </if>
            <if test="parentCommentId != null">
                parent_comment_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="belongtoId != null">
                #{belongtoId,jdbcType=INTEGER},
            </if>
            <if test="areaId != null">
                #{areaId,jdbcType=INTEGER},
            </if>
            <if test="parentCommentId != null">
                #{parentCommentId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.photo.web.entity.po.CommentsPOExample"
            resultType="java.lang.Integer">
        select count(*) from tb_comments
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update tb_comments
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.belongtoId != null">
                belongto_id = #{record.belongtoId,jdbcType=INTEGER},
            </if>
            <if test="record.areaId != null">
                area_id = #{record.areaId,jdbcType=INTEGER},
            </if>
            <if test="record.parentCommentId != null">
                parent_comment_id = #{record.parentCommentId,jdbcType=INTEGER},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=INTEGER},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update tb_comments
        set id = #{record.id,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        belongto_id = #{record.belongtoId,jdbcType=INTEGER},
        area_id = #{record.areaId,jdbcType=INTEGER},
        parent_comment_id = #{record.parentCommentId,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER},
        content = #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update tb_comments
        set id = #{record.id,jdbcType=INTEGER},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        belongto_id = #{record.belongtoId,jdbcType=INTEGER},
        area_id = #{record.areaId,jdbcType=INTEGER},
        parent_comment_id = #{record.parentCommentId,jdbcType=INTEGER},
        user_id = #{record.userId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.photo.web.entity.po.CommentsPO">
        update tb_comments
        <set>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="belongtoId != null">
                belongto_id = #{belongtoId,jdbcType=INTEGER},
            </if>
            <if test="areaId != null">
                area_id = #{areaId,jdbcType=INTEGER},
            </if>
            <if test="parentCommentId != null">
                parent_comment_id = #{parentCommentId,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.photo.web.entity.po.CommentsPO">
    update tb_comments
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      belongto_id = #{belongtoId,jdbcType=INTEGER},
      area_id = #{areaId,jdbcType=INTEGER},
      parent_comment_id = #{parentCommentId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
    <update id="updateByPrimaryKey" parameterType="com.photo.web.entity.po.CommentsPO">
    update tb_comments
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      belongto_id = #{belongtoId,jdbcType=INTEGER},
      area_id = #{areaId,jdbcType=INTEGER},
      parent_comment_id = #{parentCommentId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>